version: 2

var_1: &job_defaults
  working_directory: ~/ng-test
  docker:
    - image: ngqt/qode

var_2: &cache_key ng-test-yarn-{{ .Branch }}-{{ checksum "yarn.lock" }}

var_3: &apt_cache_key ng-test-apt-{{ .Branch }}-{{ checksum "APT_CACHE_KEY" }}

var_4: &build_cache_key ng-test-build-{{ .Branch }}-{{ checksum "BUILD_CACHE_KEY" }}

var_5: &attach_workspace
  attach_workspace:
    at: ~/ng-test

var_7: &restore_cache
  restore_cache:
    keys:
      - *cache_key

var_8: &restore_build_cache
  restore_cache:
    keys:
      - *apt_cache_key
      - *cache_key
      - *build_cache_key

var_9: &save_apt_cache
  save_cache:
    key: *apt_cache_key
    paths:
      - /var/cache/apt/archives
      - /var/lib/apt/lists

var_10: &save_build_cache
  save_cache:
    key: *build_cache_key
    paths:
      - ./build
      - ./cmake-build-debug

var_11: &save_cache
  save_cache:
    key: *cache_key
    paths:
      - ~/.cache/yarn

var_12: &build_apt_checksum
  run:
    name: Create checksums for build & apt
    command: |
      echo $(cat install-deps.sh | md5sum) >> APT_CACHE_KEY
      echo $(cat CMakeLists.txt | md5sum) >> BUILD_CACHE_KEY

jobs:
  setup:
    <<: *job_defaults
    steps:
      - checkout
      - *restore_cache
      - run:
          name: Yarn install
          command: yarn install:ci
      - *save_cache
      - *build_apt_checksum
      - persist_to_workspace:
          root: .
          paths:
            - ./APT_CACHE_KEY
            - ./BUILD_CACHE_KEY
            - ./node_modules

  build:
    <<: *job_defaults
    steps:
      - checkout
      - *attach_workspace
      - *restore_build_cache
      - run:
          name: Install build dependencies
          command: ./install-deps.sh
      - *save_apt_cache
      - run:
          name: Build
          command: yarn build
      - persist_to_workspace:
          root: .
          paths:
            - ./build
      - *save_build_cache

  test:
    <<: *job_defaults
    steps:
      - checkout
      - *attach_workspace
      - run:
          name: Test
          command: yarn test:ci

  publish-tag:
    <<: *job_defaults
    steps:
      - checkout
      - *attach_workspace
      - run:
          name: Publish NPM package
          command: |
            npm set //registry.npmjs.org/:_authToken=$NPM_TOKEN
            PACKAGE_TAG=${CIRCLE_TAG/v/''}
            npm version $PACKAGE_TAG
            npm publish --access public
            git push --follow-tags

workflows:
  version: 2
  default_workflow:
    jobs:
      - setup
      - build:
          requires:
            - setup
      - test:
          requires:
            - build
      - publish-tag:
          requires:
            - test
          filters:
            tags:
              only: /^v.*/